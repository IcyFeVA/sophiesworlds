-- Simple Game Selector Controller
-- Handles launching games via collection proxies

function init(self)
    print("GameSelector: Initializing...")
    print("GameSelector: Acquiring input focus...")
    msg.post(".", "acquire_input_focus")
    print("GameSelector: Input focus acquired!")
    
    -- Game configuration - simplified since we're not managing proxies anymore
    self.games = {
        {id = "bubbles", name = "Bubble Pop"},
        {id = "bubblewrap", name = "Bubble Wrap"},
        {id = "xylophone", name = "Xylophone"}
    }
    
    print("GameSelector: Ready with " .. #self.games .. " games")
end

function final(self)
    msg.post(".", "release_input_focus")
end

function on_message(self, message_id, message, sender)
    if message_id == hash("acquire_input_focus") then
        print("GameSelector: Received explicit acquire_input_focus request")
        msg.post(".", "acquire_input_focus")
        print("GameSelector: Input focus re-acquired!")
    else
        print("GameSelector: Received message: " .. tostring(message_id))
    end
end

function on_input(self, action_id, action)
    -- Debug: log all input received by gameSelector
    if action_id and action_id ~= hash("") and action_id ~= hash("gamepad_connected") then
        print("GameSelector: RECEIVED INPUT: " .. tostring(action_id) .. " pressed=" .. tostring(action.pressed or false))
    end
    
    -- Let GUI handle input for game selection
    return false
end

