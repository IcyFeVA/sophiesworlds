function init(self)
	print("Xylophone game: Initializing...")
	print("Xylophone game: About to acquire input focus...")
	msg.post(".", "acquire_input_focus")
	print("Xylophone game: Input focus acquired!")
	print("Xylophone game: Initialization complete!")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("window_resized") then
		print('window resized to ' .. message.width .. ' x ' .. message.height)
	elseif message_id == hash("return_to_selector") then
		-- Return to game selector
		print("Xylophone game: Returning to selector")
		msg.post("main:/go#main", "return_to_selector")
	elseif message_id == hash("input") then
		-- Handle forwarded input from main
		print("Xylophone: Received forwarded input")
		handle_input(self, message.action_id, message.action)
	end
end

function handle_input(self, action_id, action)
	print("Xylophone: Handling input: " .. tostring(action_id))
	
	-- Handle escape key to return to selector
	if action_id == hash("key_esc") and action.pressed then
		msg.post(".", "return_to_selector")
		return true
	end
	
	if action_id == hash("touch") and action.pressed then
		print("Xylophone: Touch at " .. (action.screen_x or 0) .. ", " .. (action.screen_y or 0))
		
		-- Detect which xylophone key was pressed based on touch position
		local touch_x = action.screen_x or action.x or 0
		local touch_y = action.screen_y or action.y or 0
		
		-- Simple key detection based on horizontal position
		-- Assuming xylophone keys are arranged horizontally
		local key_width = 960 / 7  -- Divide screen width by 7 keys
		local key_number = math.floor(touch_x / key_width) + 1
		
		-- Clamp to valid range
		key_number = math.max(1, math.min(7, key_number))
		
		print("Xylophone: Playing note " .. key_number)
		
		-- Play the corresponding note
		msg.post("/soundfx#note" .. key_number, "play_sound")
	end
end

function on_input(self, action_id, action)
	return handle_input(self, action_id, action)
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
