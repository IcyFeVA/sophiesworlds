-- Fireworks Spawner Script
-- Manages firework particle effects and cleanup

function init(self)
    print("Fireworks Spawner: Initializing...")
    
    -- Track active firework effects
    self.activeEffects = {}
    
    -- Color palette for fireworks
    self.colors = {
        {r = 1.0, g = 0.2, b = 0.2},  -- Red
        {r = 0.2, g = 1.0, b = 0.2},  -- Green  
        {r = 0.2, g = 0.2, b = 1.0},  -- Blue
        {r = 1.0, g = 1.0, b = 0.2},  -- Yellow
        {r = 1.0, g = 0.2, b = 1.0},  -- Magenta
        {r = 0.2, g = 1.0, b = 1.0},  -- Cyan
        {r = 1.0, g = 0.6, b = 0.2},  -- Orange
        {r = 0.8, g = 0.2, b = 1.0}   -- Purple
    }
    
    print("Fireworks Spawner: Ready")
end

function final(self)
    -- Clean up any remaining effects
    for _, effect_id in ipairs(self.activeEffects) do
        if go.exists(effect_id) then
            go.delete(effect_id)
        end
    end
end

function update(self, dt)
    -- Update logic will be added later
end

function on_message(self, message_id, message, sender)
    if message_id == hash("spawn_firework") then
        print("Fireworks Spawner: Spawning firework at " .. message.position.x .. ", " .. message.position.y)
        spawn_firework(self, message.position)
    end
end

function spawn_firework(self, position)
    -- TODO: Implement actual firework spawning
    -- This will be implemented when we create the particle effects
    
    -- Placeholder: Just print for now
    print("Fireworks Spawner: Would create firework at " .. position.x .. ", " .. position.y)
    
    -- Select random color
    local color = self.colors[math.random(#self.colors)]
    print("Fireworks Spawner: Using color R:" .. color.r .. " G:" .. color.g .. " B:" .. color.b)
end