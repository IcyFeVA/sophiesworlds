local data = require("main.data")

function init(self)
	-- Soap bubble properties with gentle animations
	self.floatSpeed = 40 + math.random(20)
	self.swayAmount = 8 + math.random(12)
	self.swaySpeed = 0.6 + math.random() * 0.8
	self.startPos = go.get_position()
	self.time = 0
	self.id = go.get_id()
	
	-- Start fully visible to avoid flickering
	go.set("#sprite", "tint.w", 0.8)
	
	-- Auto-pop after 3-5 seconds for better visual experience
	local popTime = 3 + math.random() * 2
	timer.delay(popTime, false, function()
		-- Fade out before popping
		go.animate("#sprite", "tint.w", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_INQUAD, 0.2, 0, function()
			-- Create pop effect
			local pos = go.get_position()
			msg.post("/controller#controller", "bubble_popped", {position = pos})
			msg.post("/spawner#spawner", "remove_bubble", {id = self.id})
			go.delete(self.id)
		end)
	end)
end

function update(self, dt)
	self.time = self.time + dt
	
	-- Float upward with gentle swaying motion
	local pos = go.get_position()
	pos.y = pos.y + self.floatSpeed * dt
	pos.x = self.startPos.x + math.sin(self.time * self.swaySpeed) * self.swayAmount
	go.set_position(pos)
	
	-- Remove when off screen (backup cleanup)
	if pos.y > data.SH + 100 then
		msg.post("/spawner#spawner", "remove_bubble", {id = self.id})
		go.delete(self.id)
	end
end

function on_message(self, message_id, message, sender)
	-- No collision detection needed - bubbles auto-pop
end